# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/android:api-25-ndk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/MobileAppAutomationTest/AndroidDemo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
       - checkout:
          path: ~/MobileAppAutomationTest      
       
       - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          
       - run:
          name: Download Dependencies
          command: |
            yes | sdkmanager --licenses || exit 0
            yes | sdkmanager --update || exit 0
            ./gradlew androidDependencies
            
       - run:
          name: Create APKs
          command: ./gradlew assembleAndroidTest assemble
          
       - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json        
      
       - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            sudo gcloud --quiet config set project ${PROJECT_ID}                       
        
       - run:
          name: Configure environment
          command: |          
            echo 'export APK_PATH=`find . -path "*.apk" ! -path "*unaligned.apk" ! -path "*Test*.apk" -print -quit`' >> $BASH_ENV
            echo 'export TEST_APK_PATH=`find "." "-path" "*Test*.apk" -print -quit`' >> $BASH_ENV     
            
       - run:
          name: Run UI Tests
          command: sudo gcloud firebase test android run --type instrumentation --app ${APK_PATH} --test ${TEST_APK_PATH} --device model=Nexus6P,version=25,locale=en,orientation=portrait --timeout 30m
          no_output_timeout: 30m
          
       - run:
           name: Create directory to store test results
           command: mkdir test-results
           
       - run:
            name: Download instrumented test results from Firebase Test Lab
            command: gsutil -m cp -r -U "`gsutil ls Buckets://test-lab-9q58v89n1h4r4-y0dp6vv8jjn0q | tail -1`*" /root/workspace/test-results/
              
       - store_artifacts:
          path: app/build/reports
          destination: reports
      
       - store_test_results:
          path: test-results 
          destination: /test-results/
